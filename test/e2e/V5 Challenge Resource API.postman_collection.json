{
    "info": {
        "_postman_id": "e84a84a7-97bb-4081-95c7-c01e8204cc24",
        "name": "V5 Challenge Resource API",
        "description": "## Security constraints\n\nGET/POST/DELETE `/Resources` endpoints can only be called from admins, via M2M, or users for whom there is at least one existing `Resource` where `role.fullReadAccess`, `role.fullWriteAccess` and `role.isActive` are `true`. Special Case: User can create/delte selfObtainable resource for its own.\n`Resource Roles` POST and PUT endpoints can only be called from admins or via M2M.\nGET `/Resources/{memberId}/challenges` endpoints can be called from any authenticated user or via M2M.\nResource role phase dependencies APIs can only be called from admins or M2M with valid scopes.\n",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "resources",
            "item": [
                {
                    "name": "/resources",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('', function() {\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        // Edge case\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "})"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization",
                                    "type": "string"
                                },
                                {
                                    "key": "value",
                                    "value": true,
                                    "type": "boolean"
                                },
                                {
                                    "key": "in",
                                    "value": "header",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/resources?page=1&perPage=20&challengeId=dolore commodo&roleId=dolore commodo&sortBy=dolore commodo&sortOrder=dolore commodo",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "resources"
                            ],
                            "query": [
                                {
                                    "key": "page",
                                    "value": "1",
                                    "description": "The page number."
                                },
                                {
                                    "key": "perPage",
                                    "value": "20",
                                    "description": "The number of items to list per page."
                                },
                                {
                                    "key": "challengeId",
                                    "value": "dolore commodo",
                                    "description": "(Required) The challenge id"
                                },
                                {
                                    "key": "roleId",
                                    "value": "dolore commodo",
                                    "description": "role id to filter on"
                                },
                                {
                                    "key": "sortBy",
                                    "value": "dolore commodo",
                                    "description": "Sort the results by the field."
                                },
                                {
                                    "key": "sortOrder",
                                    "value": "dolore commodo",
                                    "description": "Order the results by the asc/desc."
                                }
                            ]
                        },
                        "description": "Get all resources for a challenge"
                    },
                    "response": [
                        {
                            "name": "The unauthorized error entity.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources?page=1&perPage=20&challengeId=dolore commodo&roleId=dolore commodo&sortBy=dolore commodo&sortOrder=dolore commodo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources"
                                    ],
                                    "query": [
                                        {
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "key": "perPage",
                                            "value": "20"
                                        },
                                        {
                                            "key": "challengeId",
                                            "value": "dolore commodo"
                                        },
                                        {
                                            "key": "roleId",
                                            "value": "dolore commodo"
                                        },
                                        {
                                            "key": "sortBy",
                                            "value": "dolore commodo"
                                        },
                                        {
                                            "key": "sortOrder",
                                            "value": "dolore commodo"
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The not found error entity.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources?page=1&perPage=20&challengeId=dolore commodo&roleId=dolore commodo&sortBy=dolore commodo&sortOrder=dolore commodo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources"
                                    ],
                                    "query": [
                                        {
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "key": "perPage",
                                            "value": "20"
                                        },
                                        {
                                            "key": "challengeId",
                                            "value": "dolore commodo"
                                        },
                                        {
                                            "key": "roleId",
                                            "value": "dolore commodo"
                                        },
                                        {
                                            "key": "sortBy",
                                            "value": "dolore commodo"
                                        },
                                        {
                                            "key": "sortOrder",
                                            "value": "dolore commodo"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The permission error entity.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources?page=1&perPage=20&challengeId=dolore commodo&roleId=dolore commodo&sortBy=dolore commodo&sortOrder=dolore commodo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources"
                                    ],
                                    "query": [
                                        {
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "key": "perPage",
                                            "value": "20"
                                        },
                                        {
                                            "key": "challengeId",
                                            "value": "dolore commodo"
                                        },
                                        {
                                            "key": "roleId",
                                            "value": "dolore commodo"
                                        },
                                        {
                                            "key": "sortBy",
                                            "value": "dolore commodo"
                                        },
                                        {
                                            "key": "sortOrder",
                                            "value": "dolore commodo"
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The bad request error entity.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources?page=1&perPage=20&challengeId=dolore commodo&roleId=dolore commodo&sortBy=dolore commodo&sortOrder=dolore commodo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources"
                                    ],
                                    "query": [
                                        {
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "key": "perPage",
                                            "value": "20"
                                        },
                                        {
                                            "key": "challengeId",
                                            "value": "dolore commodo"
                                        },
                                        {
                                            "key": "roleId",
                                            "value": "dolore commodo"
                                        },
                                        {
                                            "key": "sortBy",
                                            "value": "dolore commodo"
                                        },
                                        {
                                            "key": "sortOrder",
                                            "value": "dolore commodo"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The server error entity.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources?page=1&perPage=20&challengeId=dolore commodo&roleId=dolore commodo&sortBy=dolore commodo&sortOrder=dolore commodo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources"
                                    ],
                                    "query": [
                                        {
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "key": "perPage",
                                            "value": "20"
                                        },
                                        {
                                            "key": "challengeId",
                                            "value": "dolore commodo"
                                        },
                                        {
                                            "key": "roleId",
                                            "value": "dolore commodo"
                                        },
                                        {
                                            "key": "sortBy",
                                            "value": "dolore commodo"
                                        },
                                        {
                                            "key": "sortOrder",
                                            "value": "dolore commodo"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "OK - the request was successful",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources?page=1&perPage=20&challengeId=dolore commodo&roleId=dolore commodo&sortBy=dolore commodo&sortOrder=dolore commodo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources"
                                    ],
                                    "query": [
                                        {
                                            "key": "page",
                                            "value": "1"
                                        },
                                        {
                                            "key": "perPage",
                                            "value": "20"
                                        },
                                        {
                                            "key": "challengeId",
                                            "value": "dolore commodo"
                                        },
                                        {
                                            "key": "roleId",
                                            "value": "dolore commodo"
                                        },
                                        {
                                            "key": "sortBy",
                                            "value": "dolore commodo"
                                        },
                                        {
                                            "key": "sortOrder",
                                            "value": "dolore commodo"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "body": "[\n {\n  \"id\": \"pariatur\",\n  \"challengeId\": \"tempor id quis\",\n  \"memberId\": \"elit\",\n  \"memberHandle\": \"proide\",\n  \"roleId\": \"reprehenderit Ut fugiat\",\n  \"created\": \"1955-02-02T08:10:42.660Z\",\n  \"updated\": \"1964-03-06T02:25:41.958Z\",\n  \"createdBy\": \"Topcoder User\",\n  \"updatedBy\": \"Topcoder User\"\n },\n {\n  \"id\": \"eu aliqua ipsum\",\n  \"challengeId\": \"aliqua\",\n  \"memberId\": \"laboris officia\",\n  \"memberHandle\": \"officia aliqua\",\n  \"roleId\": \"reprehenderit sed id in\",\n  \"created\": \"1998-11-17T01:49:47.019Z\",\n  \"updated\": \"1952-03-03T21:02:45.347Z\",\n  \"createdBy\": \"Topcoder User\",\n  \"updatedBy\": \"Topcoder User\"\n }\n]"
                        }
                    ]
                },
                {
                    "name": "/resources",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Create resource endpoint', function() {\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "})"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization",
                                    "type": "string"
                                },
                                {
                                    "key": "value",
                                    "value": true,
                                    "type": "boolean"
                                },
                                {
                                    "key": "in",
                                    "value": "header",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"challengeId\": \"non dolor ut anim et\",\n    \"memberHandle\": \"amet aute esse\",\n    \"roleId\": \"ut esse Ut dolore\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/resources",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "resources"
                            ]
                        },
                        "description": "Create a new resource for a challenge. Verify that the challenge exists by calling the **/v5/challenges/{id}** endpoint using an M2M token."
                    },
                    "response": [
                        {
                            "name": "The unauthorized error entity.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources"
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The not found error entity.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources"
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "OK - the request was successful",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n \"id\": \"sint aliquip officia eu\",\n \"challengeId\": \"reprehenderit\",\n \"memberId\": \"voluptate consectetur laborum occaecat\",\n \"memberHandle\": \"mollit id in\",\n \"roleId\": \"laborum nostrud\",\n \"created\": \"2000-04-14T12:36:38.061Z\",\n \"updated\": \"1993-06-15T22:00:06.515Z\",\n \"createdBy\": \"Topcoder User\",\n \"updatedBy\": \"Topcoder User\"\n}"
                        },
                        {
                            "name": "The server error entity.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The permission error entity.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources"
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The bad request error entity.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The conflict error entity.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources"
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        }
                    ]
                },
                {
                    "name": "/resources",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test( '', function() {\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "})"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization",
                                    "type": "string"
                                },
                                {
                                    "key": "value",
                                    "value": true,
                                    "type": "boolean"
                                },
                                {
                                    "key": "in",
                                    "value": "header",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"challengeId\": \"non dolor ut anim et\",\n    \"memberHandle\": \"amet aute esse\",\n    \"roleId\": \"ut esse Ut dolore\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/resources",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "resources"
                            ]
                        },
                        "description": "Delete a resource from a challenge"
                    },
                    "response": [
                        {
                            "name": "The unauthorized error entity.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources"
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "OK - the request was successful",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n \"id\": \"sint aliquip officia eu\",\n \"challengeId\": \"reprehenderit\",\n \"memberId\": \"voluptate consectetur laborum occaecat\",\n \"memberHandle\": \"mollit id in\",\n \"roleId\": \"laborum nostrud\",\n \"created\": \"2000-04-14T12:36:38.061Z\",\n \"updated\": \"1993-06-15T22:00:06.515Z\",\n \"createdBy\": \"Topcoder User\",\n \"updatedBy\": \"Topcoder User\"\n}"
                        },
                        {
                            "name": "The bad request error entity.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The permission error entity.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources"
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The not found error entity.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources"
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The server error entity.",
                            "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        }
                    ]
                },
                {
                    "name": "/resources/:memberId/challenges",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('', function() {\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        // Edge case\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "})"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization",
                                    "type": "string"
                                },
                                {
                                    "key": "value",
                                    "value": true,
                                    "type": "boolean"
                                },
                                {
                                    "key": "in",
                                    "value": "header",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/resources/:memberId/challenges?resourceRoleId=dolore commodo",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "resources",
                                ":memberId",
                                "challenges"
                            ],
                            "query": [
                                {
                                    "key": "resourceRoleId",
                                    "value": "dolore commodo",
                                    "description": "the resource role id filter"
                                }
                            ],
                            "variable": [
                                {
                                    "key": "memberId",
                                    "value": "58330461",
                                    "type": "string",
                                    "description": "(Required) the user id"
                                }
                            ]
                        },
                        "description": "List all challenges that given topcoder member has access to."
                    },
                    "response": [
                        {
                            "name": "OK - the request was successful",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources/:memberId/challenges?resourceRoleId=dolore commodo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources",
                                        ":memberId",
                                        "challenges"
                                    ],
                                    "query": [
                                        {
                                            "key": "resourceRoleId",
                                            "value": "dolore commodo"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "memberId"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "body": "[\n \"97ee7396-5946-4a2e-968a-b35c7b009753\",\n \"97ee7396-5946-4a2e-968a-b35c7b009753\"\n]"
                        },
                        {
                            "name": "The unauthorized error entity.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources/:memberId/challenges?resourceRoleId=dolore commodo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources",
                                        ":memberId",
                                        "challenges"
                                    ],
                                    "query": [
                                        {
                                            "key": "resourceRoleId",
                                            "value": "dolore commodo"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "memberId"
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The bad request error entity.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources/:memberId/challenges?resourceRoleId=dolore commodo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources",
                                        ":memberId",
                                        "challenges"
                                    ],
                                    "query": [
                                        {
                                            "key": "resourceRoleId",
                                            "value": "dolore commodo"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "memberId"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The server error entity.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources/:memberId/challenges?resourceRoleId=dolore commodo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources",
                                        ":memberId",
                                        "challenges"
                                    ],
                                    "query": [
                                        {
                                            "key": "resourceRoleId",
                                            "value": "dolore commodo"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "memberId"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The permission error entity.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resources/:memberId/challenges?resourceRoleId=dolore commodo",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources",
                                        ":memberId",
                                        "challenges"
                                    ],
                                    "query": [
                                        {
                                            "key": "resourceRoleId",
                                            "value": "dolore commodo"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "memberId"
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "Challenge with id: 11111111 doesn't exist",
                            "originalRequest": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/resources/:memberId/challenges?resourceRoleId=11111111",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resources",
                                        ":memberId",
                                        "challenges"
                                    ],
                                    "query": [
                                        {
                                            "key": "resourceRoleId",
                                            "value": "11111111",
                                            "description": "the resource role id filter"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "key": "memberId",
                                            "value": "58330461",
                                            "type": "string",
                                            "description": "(Required) the user id"
                                        }
                                    ]
                                }
                            },
                            "code": 404,
                            "_postman_previewlanguage": "json",
                            "header": null,
                            "cookie": [],
                            "body": "{\r\n    \"message\": \"Challenge with id: 11111111 doesn't exist.\"\r\n}"
                        }
                    ]
                },
                {
                    "name": "/invalid",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "\r",
                                    "\r",
                                    "pm.test(\"Http resource not found, return 404\", function() {\r",
                                    "    const res = pm.response.toJSON();\r",
                                    "\r",
                                    "    pm.expect(pm.response).to.have.status(404);\r",
                                    "    pm.expect(res).to.have.property(\"message\");\r",
                                    "    pm.expect(res).to.eql(\"The resquested resource cannot be found.\")\r",
                                    "})"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "https://dae55c6c-b9b4-44bd-9f9e-d7b94be0709b.mock.pstmn.io/invalid",
                            "protocol": "https",
                            "host": [
                                "dae55c6c-b9b4-44bd-9f9e-d7b94be0709b",
                                "mock",
                                "pstmn",
                                "io"
                            ],
                            "path": [
                                "invalid"
                            ]
                        },
                        "description": "Http resource not found"
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "resource-roles",
            "item": [
                {
                    "name": "Phase-dependencies",
                    "item": [
                        {
                            "name": "{id}",
                            "item": [
                                {
                                    "name": "/resource-roles/Phase-dependencies/:id",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "pm.test('', function() {\r",
                                                    "    pm.sendRequest('', function(err, response) {\r",
                                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                                    "        pm.expect(response.json().name).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "    });\r",
                                                    "\r",
                                                    "    pm.sendRequest('', function(err, response) {\r",
                                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                                    "        pm.expect(response.json().name).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "    });\r",
                                                    "\r",
                                                    "    pm.sendRequest('', function(err, response) {\r",
                                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                                    "        pm.expect(response.json().name).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "    });\r",
                                                    "\r",
                                                    "    pm.sendRequest('', function(err, response) {\r",
                                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                                    "        pm.expect(response.json().name).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "    });\r",
                                                    "\r",
                                                    "    pm.sendRequest('', function(err, response) {\r",
                                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                                    "        pm.expect(response.json().name).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "    });\r",
                                                    "\r",
                                                    "    pm.sendRequest('', function(err, response) {\r",
                                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                                    "        pm.expect(response.json().name).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "    });\r",
                                                    "\r",
                                                    "    pm.sendRequest('', function(err, response) {\r",
                                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                                    "        pm.expect(response.json().name).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "    });\r",
                                                    "\r",
                                                    "    pm.sendRequest('', function(err, response) {\r",
                                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                                    "        pm.expect(response.json().name).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "    });\r",
                                                    "\r",
                                                    "    pm.sendRequest('', function(err, response) {\r",
                                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                                    "        pm.expect(response.json().name).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "    });\r",
                                                    "\r",
                                                    "    pm.sendRequest('', function(err, response) {\r",
                                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                                    "        pm.expect(response.json().name).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "    });\r",
                                                    "\r",
                                                    "    pm.sendRequest('', function(err, response) {\r",
                                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                                    "        pm.expect(response.json().name).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "    });\r",
                                                    "\r",
                                                    "    pm.sendRequest('', function(err, response) {\r",
                                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                                    "        pm.expect(response.json().name).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "    });\r",
                                                    "\r",
                                                    "    pm.sendRequest('', function(err, response) {\r",
                                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                                    "        pm.expect(response.json().name).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "    });\r",
                                                    "})"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization",
                                                    "type": "string"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": true,
                                                    "type": "boolean"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header",
                                                    "type": "string"
                                                }
                                            ]
                                        },
                                        "method": "PUT",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"phaseId\": \"dolor sint sit deserunt\",\n    \"resourceRoleId\": \"aliqua in\",\n    \"phaseState\": false\n}"
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/resource-roles/Phase-dependencies/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "resource-roles",
                                                "Phase-dependencies",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id",
                                                    "value": "dolore commodo",
                                                    "type": "string",
                                                    "description": "(Required) the dependency id"
                                                }
                                            ]
                                        },
                                        "description": "Update an existing resource role phase dependency.\n"
                                    },
                                    "response": [
                                        {
                                            "name": "The conflict error entity.",
                                            "originalRequest": {
                                                "method": "PUT",
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/resource-roles/Phase-dependencies/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "resource-roles",
                                                        "Phase-dependencies",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "_postman_previewlanguage": "text",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "cookie": [],
                                            "body": ""
                                        },
                                        {
                                            "name": "The not found error entity.",
                                            "originalRequest": {
                                                "method": "PUT",
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/resource-roles/Phase-dependencies/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "resource-roles",
                                                        "Phase-dependencies",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "text",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "cookie": [],
                                            "body": ""
                                        },
                                        {
                                            "name": "The unauthorized error entity.",
                                            "originalRequest": {
                                                "method": "PUT",
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/resource-roles/Phase-dependencies/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "resource-roles",
                                                        "Phase-dependencies",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "text",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "cookie": [],
                                            "body": ""
                                        },
                                        {
                                            "name": "The permission error entity.",
                                            "originalRequest": {
                                                "method": "PUT",
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/resource-roles/Phase-dependencies/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "resource-roles",
                                                        "Phase-dependencies",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Forbidden",
                                            "code": 403,
                                            "_postman_previewlanguage": "text",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "cookie": [],
                                            "body": ""
                                        },
                                        {
                                            "name": "The bad request error entity.",
                                            "originalRequest": {
                                                "method": "PUT",
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/resource-roles/Phase-dependencies/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "resource-roles",
                                                        "Phase-dependencies",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "_postman_previewlanguage": "text",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "cookie": [],
                                            "body": ""
                                        },
                                        {
                                            "name": "The server error entity.",
                                            "originalRequest": {
                                                "method": "PUT",
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/resource-roles/Phase-dependencies/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "resource-roles",
                                                        "Phase-dependencies",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "text",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "cookie": [],
                                            "body": ""
                                        },
                                        {
                                            "name": "OK - the request was successful",
                                            "originalRequest": {
                                                "method": "PUT",
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/resource-roles/Phase-dependencies/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "resource-roles",
                                                        "Phase-dependencies",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "body": "{\n \"phaseId\": \"ut qui dolore elit\",\n \"resourceRoleId\": \"aliquip est quis eu\",\n \"phaseState\": true,\n \"id\": \"do dolore ut\"\n}"
                                        }
                                    ]
                                },
                                {
                                    "name": "/resource-roles/Phase-dependencies/:id",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "pm.test('', function() {\r",
                                                    "    pm.sendRequest('', function(err, response) {\r",
                                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                                    "        pm.expect(response.json().name).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "    });\r",
                                                    "\r",
                                                    "    pm.sendRequest('', function(err, response) {\r",
                                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                                    "        pm.expect(response.json().name).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "    });\r",
                                                    "\r",
                                                    "    pm.sendRequest('', function(err, response) {\r",
                                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                                    "        pm.expect(response.json().name).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "    });\r",
                                                    "\r",
                                                    "    pm.sendRequest('', function(err, response) {\r",
                                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                                    "        pm.expect(response.json().name).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "    });\r",
                                                    "\r",
                                                    "    pm.sendRequest('', function(err, response) {\r",
                                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                                    "        pm.expect(response.json().name).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "        pm.expect(response.json().).to.eql();\r",
                                                    "    });\r",
                                                    "})"
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth": {
                                            "type": "apikey",
                                            "apikey": [
                                                {
                                                    "key": "key",
                                                    "value": "Authorization",
                                                    "type": "string"
                                                },
                                                {
                                                    "key": "value",
                                                    "value": true,
                                                    "type": "boolean"
                                                },
                                                {
                                                    "key": "in",
                                                    "value": "header",
                                                    "type": "string"
                                                }
                                            ]
                                        },
                                        "method": "DELETE",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/resource-roles/Phase-dependencies/:id",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "resource-roles",
                                                "Phase-dependencies",
                                                ":id"
                                            ],
                                            "variable": [
                                                {
                                                    "key": "id",
                                                    "value": "dolore commodo",
                                                    "type": "string",
                                                    "description": "(Required) the dependency id"
                                                }
                                            ]
                                        },
                                        "description": "Delete a resource role phase dependency"
                                    },
                                    "response": [
                                        {
                                            "name": "The server error entity.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/resource-roles/Phase-dependencies/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "resource-roles",
                                                        "Phase-dependencies",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Internal Server Error",
                                            "code": 500,
                                            "_postman_previewlanguage": "text",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "cookie": [],
                                            "body": ""
                                        },
                                        {
                                            "name": "OK - the request was successful",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/resource-roles/Phase-dependencies/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "resource-roles",
                                                        "Phase-dependencies",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "_postman_previewlanguage": "json",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "cookie": [],
                                            "body": "{\n \"phaseId\": \"ut qui dolore elit\",\n \"resourceRoleId\": \"aliquip est quis eu\",\n \"phaseState\": true,\n \"id\": \"do dolore ut\"\n}"
                                        },
                                        {
                                            "name": "The unauthorized error entity.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/resource-roles/Phase-dependencies/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "resource-roles",
                                                        "Phase-dependencies",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Unauthorized",
                                            "code": 401,
                                            "_postman_previewlanguage": "text",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "cookie": [],
                                            "body": ""
                                        },
                                        {
                                            "name": "The not found error entity.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/resource-roles/Phase-dependencies/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "resource-roles",
                                                        "Phase-dependencies",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "_postman_previewlanguage": "text",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "cookie": [],
                                            "body": ""
                                        },
                                        {
                                            "name": "The permission error entity.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/resource-roles/Phase-dependencies/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "resource-roles",
                                                        "Phase-dependencies",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Forbidden",
                                            "code": 403,
                                            "_postman_previewlanguage": "text",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "cookie": [],
                                            "body": ""
                                        },
                                        {
                                            "name": "The bad request error entity.",
                                            "originalRequest": {
                                                "method": "DELETE",
                                                "header": [
                                                    {
                                                        "description": {
                                                            "content": "Added as a part of security scheme: apikey",
                                                            "type": "text/plain"
                                                        },
                                                        "key": "Authorization",
                                                        "value": "<API Key>"
                                                    }
                                                ],
                                                "url": {
                                                    "raw": "{{baseUrl}}/resource-roles/Phase-dependencies/:id",
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "path": [
                                                        "resource-roles",
                                                        "Phase-dependencies",
                                                        ":id"
                                                    ],
                                                    "variable": [
                                                        {
                                                            "key": "id"
                                                        }
                                                    ]
                                                }
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "_postman_previewlanguage": "text",
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "text/plain"
                                                }
                                            ],
                                            "cookie": [],
                                            "body": ""
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "/resource-roles/Phase-dependencies",
                            "request": {
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization",
                                            "type": "string"
                                        },
                                        {
                                            "key": "value",
                                            "value": true,
                                            "type": "boolean"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header",
                                            "type": "string"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/resource-roles/Phase-dependencies?phaseId=dolore commodo&resourceRoleId=dolore commodo&phaseState=true",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resource-roles",
                                        "Phase-dependencies"
                                    ],
                                    "query": [
                                        {
                                            "key": "phaseId",
                                            "value": "dolore commodo",
                                            "description": "The phase id"
                                        },
                                        {
                                            "key": "resourceRoleId",
                                            "value": "dolore commodo",
                                            "description": "The resource role id"
                                        },
                                        {
                                            "key": "phaseState",
                                            "value": "true",
                                            "description": "The phase state"
                                        }
                                    ]
                                },
                                "description": "Get resource role phase dependencies"
                            },
                            "response": [
                                {
                                    "name": "The bad request error entity.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/resource-roles/Phase-dependencies?phaseId=dolore commodo&resourceRoleId=dolore commodo&phaseState=true",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "resource-roles",
                                                "Phase-dependencies"
                                            ],
                                            "query": [
                                                {
                                                    "key": "phaseId",
                                                    "value": "dolore commodo"
                                                },
                                                {
                                                    "key": "resourceRoleId",
                                                    "value": "dolore commodo"
                                                },
                                                {
                                                    "key": "phaseState",
                                                    "value": "true"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "_postman_previewlanguage": "text",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "cookie": [],
                                    "body": ""
                                },
                                {
                                    "name": "The server error entity.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/resource-roles/Phase-dependencies?phaseId=dolore commodo&resourceRoleId=dolore commodo&phaseState=true",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "resource-roles",
                                                "Phase-dependencies"
                                            ],
                                            "query": [
                                                {
                                                    "key": "phaseId",
                                                    "value": "dolore commodo"
                                                },
                                                {
                                                    "key": "resourceRoleId",
                                                    "value": "dolore commodo"
                                                },
                                                {
                                                    "key": "phaseState",
                                                    "value": "true"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "text",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "cookie": [],
                                    "body": ""
                                },
                                {
                                    "name": "The not found error entity.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/resource-roles/Phase-dependencies?phaseId=dolore commodo&resourceRoleId=dolore commodo&phaseState=true",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "resource-roles",
                                                "Phase-dependencies"
                                            ],
                                            "query": [
                                                {
                                                    "key": "phaseId",
                                                    "value": "dolore commodo"
                                                },
                                                {
                                                    "key": "resourceRoleId",
                                                    "value": "dolore commodo"
                                                },
                                                {
                                                    "key": "phaseState",
                                                    "value": "true"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "text",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "cookie": [],
                                    "body": ""
                                },
                                {
                                    "name": "OK - the request was successful",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/resource-roles/Phase-dependencies?phaseId=dolore commodo&resourceRoleId=dolore commodo&phaseState=true",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "resource-roles",
                                                "Phase-dependencies"
                                            ],
                                            "query": [
                                                {
                                                    "key": "phaseId",
                                                    "value": "dolore commodo"
                                                },
                                                {
                                                    "key": "resourceRoleId",
                                                    "value": "dolore commodo"
                                                },
                                                {
                                                    "key": "phaseState",
                                                    "value": "true"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "body": "[\n {\n  \"phaseId\": \"in\",\n  \"resourceRoleId\": \"id in\",\n  \"phaseState\": true,\n  \"id\": \"aute dolor exe\"\n },\n {\n  \"phaseId\": \"minim sunt irure officia\",\n  \"resourceRoleId\": \"ul\",\n  \"phaseState\": true,\n  \"id\": \"adipisicing culpa \"\n }\n]"
                                },
                                {
                                    "name": "The permission error entity.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/resource-roles/Phase-dependencies?phaseId=dolore commodo&resourceRoleId=dolore commodo&phaseState=true",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "resource-roles",
                                                "Phase-dependencies"
                                            ],
                                            "query": [
                                                {
                                                    "key": "phaseId",
                                                    "value": "dolore commodo"
                                                },
                                                {
                                                    "key": "resourceRoleId",
                                                    "value": "dolore commodo"
                                                },
                                                {
                                                    "key": "phaseState",
                                                    "value": "true"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Forbidden",
                                    "code": 403,
                                    "_postman_previewlanguage": "text",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "cookie": [],
                                    "body": ""
                                },
                                {
                                    "name": "The unauthorized error entity.",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/resource-roles/Phase-dependencies?phaseId=dolore commodo&resourceRoleId=dolore commodo&phaseState=true",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "resource-roles",
                                                "Phase-dependencies"
                                            ],
                                            "query": [
                                                {
                                                    "key": "phaseId",
                                                    "value": "dolore commodo"
                                                },
                                                {
                                                    "key": "resourceRoleId",
                                                    "value": "dolore commodo"
                                                },
                                                {
                                                    "key": "phaseState",
                                                    "value": "true"
                                                }
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "text",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "cookie": [],
                                    "body": ""
                                }
                            ]
                        },
                        {
                            "name": "/resource-roles/Phase-dependencies",
                            "request": {
                                "auth": {
                                    "type": "apikey",
                                    "apikey": [
                                        {
                                            "key": "key",
                                            "value": "Authorization",
                                            "type": "string"
                                        },
                                        {
                                            "key": "value",
                                            "value": true,
                                            "type": "boolean"
                                        },
                                        {
                                            "key": "in",
                                            "value": "header",
                                            "type": "string"
                                        }
                                    ]
                                },
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"phaseId\": \"dolor sint sit deserunt\",\n    \"resourceRoleId\": \"aliqua in\",\n    \"phaseState\": false\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/resource-roles/Phase-dependencies",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resource-roles",
                                        "Phase-dependencies"
                                    ]
                                },
                                "description": "Create a new resource role phase dependency."
                            },
                            "response": [
                                {
                                    "name": "The unauthorized error entity.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/resource-roles/Phase-dependencies",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "resource-roles",
                                                "Phase-dependencies"
                                            ]
                                        }
                                    },
                                    "status": "Unauthorized",
                                    "code": 401,
                                    "_postman_previewlanguage": "text",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "cookie": [],
                                    "body": ""
                                },
                                {
                                    "name": "The conflict error entity.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/resource-roles/Phase-dependencies",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "resource-roles",
                                                "Phase-dependencies"
                                            ]
                                        }
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "_postman_previewlanguage": "text",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "cookie": [],
                                    "body": ""
                                },
                                {
                                    "name": "The permission error entity.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/resource-roles/Phase-dependencies",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "resource-roles",
                                                "Phase-dependencies"
                                            ]
                                        }
                                    },
                                    "status": "Forbidden",
                                    "code": 403,
                                    "_postman_previewlanguage": "text",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "cookie": [],
                                    "body": ""
                                },
                                {
                                    "name": "The server error entity.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/resource-roles/Phase-dependencies",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "resource-roles",
                                                "Phase-dependencies"
                                            ]
                                        }
                                    },
                                    "status": "Internal Server Error",
                                    "code": 500,
                                    "_postman_previewlanguage": "text",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "cookie": [],
                                    "body": ""
                                },
                                {
                                    "name": "The bad request error entity.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/resource-roles/Phase-dependencies",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "resource-roles",
                                                "Phase-dependencies"
                                            ]
                                        }
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "_postman_previewlanguage": "text",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "cookie": [],
                                    "body": ""
                                },
                                {
                                    "name": "OK - the request was successful",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/resource-roles/Phase-dependencies",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "resource-roles",
                                                "Phase-dependencies"
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "cookie": [],
                                    "body": "{\n \"phaseId\": \"ut qui dolore elit\",\n \"resourceRoleId\": \"aliquip est quis eu\",\n \"phaseState\": true,\n \"id\": \"do dolore ut\"\n}"
                                },
                                {
                                    "name": "The not found error entity.",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [
                                            {
                                                "description": {
                                                    "content": "Added as a part of security scheme: apikey",
                                                    "type": "text/plain"
                                                },
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{baseUrl}}/resource-roles/Phase-dependencies",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "resource-roles",
                                                "Phase-dependencies"
                                            ]
                                        }
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "_postman_previewlanguage": "text",
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }
                                    ],
                                    "cookie": [],
                                    "body": ""
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "/resource-roles",
                    "request": {
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization",
                                    "type": "string"
                                },
                                {
                                    "key": "value",
                                    "value": true,
                                    "type": "boolean"
                                },
                                {
                                    "key": "in",
                                    "value": "header",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/resource-roles?isActive=false&name=dolore commodo&legacyId=-96596561.66811322&selfObtainable=true&fullAccess=true",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "resource-roles"
                            ],
                            "query": [
                                {
                                    "key": "isActive",
                                    "value": "false",
                                    "description": "Filters the results based on the `isActive` property"
                                },
                                {
                                    "key": "name",
                                    "value": "dolore commodo",
                                    "description": "Filters the results based on the `name` property"
                                },
                                {
                                    "key": "legacyId",
                                    "value": "-96596561.66811322",
                                    "description": "Filters the results based on the `legacyId` property"
                                },
                                {
                                    "key": "selfObtainable",
                                    "value": "true",
                                    "description": "Filters the results based on the `selfObtainable` property"
                                },
                                {
                                    "key": "fullAccess",
                                    "value": "true",
                                    "description": "Filters the results based on the `fullAccess` property"
                                }
                            ]
                        },
                        "description": "Get all resource roles. If isActive parameter is provided, filter the results by the set properties."
                    },
                    "response": [
                        {
                            "name": "The server error entity.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resource-roles?isActive=true&name=dolore commodo&legacyId=-96596561.66811322&selfObtainable=true&fullAccess=true",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resource-roles"
                                    ],
                                    "query": [
                                        {
                                            "key": "isActive",
                                            "value": "true"
                                        },
                                        {
                                            "key": "name",
                                            "value": "dolore commodo"
                                        },
                                        {
                                            "key": "legacyId",
                                            "value": "-96596561.66811322"
                                        },
                                        {
                                            "key": "selfObtainable",
                                            "value": "true"
                                        },
                                        {
                                            "key": "fullAccess",
                                            "value": "true"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The permission error entity.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resource-roles?isActive=true&name=dolore commodo&legacyId=-96596561.66811322&selfObtainable=true&fullAccess=true",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resource-roles"
                                    ],
                                    "query": [
                                        {
                                            "key": "isActive",
                                            "value": "true"
                                        },
                                        {
                                            "key": "name",
                                            "value": "dolore commodo"
                                        },
                                        {
                                            "key": "legacyId",
                                            "value": "-96596561.66811322"
                                        },
                                        {
                                            "key": "selfObtainable",
                                            "value": "true"
                                        },
                                        {
                                            "key": "fullAccess",
                                            "value": "true"
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "OK - the request was successful",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resource-roles?isActive=true&name=dolore commodo&legacyId=-96596561.66811322&selfObtainable=true&fullAccess=true",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resource-roles"
                                    ],
                                    "query": [
                                        {
                                            "key": "isActive",
                                            "value": "true"
                                        },
                                        {
                                            "key": "name",
                                            "value": "dolore commodo"
                                        },
                                        {
                                            "key": "legacyId",
                                            "value": "-96596561.66811322"
                                        },
                                        {
                                            "key": "selfObtainable",
                                            "value": "true"
                                        },
                                        {
                                            "key": "fullAccess",
                                            "value": "true"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "body": "[\n {\n  \"name\": \"laborum adipisicing\",\n  \"fullWriteAccess\": true,\n  \"isActive\": false,\n  \"selfObtainable\": false,\n  \"id\": \"ut ea cupidatat eu\",\n  \"fullReadAccess\": false\n },\n {\n  \"name\": \"adipisicing deserunt\",\n  \"fullWriteAccess\": false,\n  \"isActive\": true,\n  \"selfObtainable\": false,\n  \"id\": \"anim aute exercitation\",\n  \"fullReadAccess\": true\n }\n]"
                        },
                        {
                            "name": "The unauthorized error entity.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resource-roles?isActive=true&name=dolore commodo&legacyId=-96596561.66811322&selfObtainable=true&fullAccess=true",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resource-roles"
                                    ],
                                    "query": [
                                        {
                                            "key": "isActive",
                                            "value": "true"
                                        },
                                        {
                                            "key": "name",
                                            "value": "dolore commodo"
                                        },
                                        {
                                            "key": "legacyId",
                                            "value": "-96596561.66811322"
                                        },
                                        {
                                            "key": "selfObtainable",
                                            "value": "true"
                                        },
                                        {
                                            "key": "fullAccess",
                                            "value": "true"
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The bad request error entity.",
                            "originalRequest": {
                                "method": "GET",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resource-roles?isActive=true&name=dolore commodo&legacyId=-96596561.66811322&selfObtainable=true&fullAccess=true",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resource-roles"
                                    ],
                                    "query": [
                                        {
                                            "key": "isActive",
                                            "value": "true"
                                        },
                                        {
                                            "key": "name",
                                            "value": "dolore commodo"
                                        },
                                        {
                                            "key": "legacyId",
                                            "value": "-96596561.66811322"
                                        },
                                        {
                                            "key": "selfObtainable",
                                            "value": "true"
                                        },
                                        {
                                            "key": "fullAccess",
                                            "value": "true"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        }
                    ]
                },
                {
                    "name": "/resource-roles",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test( '', function() {\r",
                                    "    pm.sendRequest(\"\", function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest(\"\", function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest(\"\", function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest(\"\", function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest(\"\", function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest(\"\", function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest(\"\", function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest(\"\", function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest(\"\", function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest(\"\", function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "\r",
                                    "    pm.sendRequest('', function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "})"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization",
                                    "type": "string"
                                },
                                {
                                    "key": "value",
                                    "value": true,
                                    "type": "boolean"
                                },
                                {
                                    "key": "in",
                                    "value": "header",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"enim eu cillum sunt\",\n    \"fullWriteAccess\": true,\n    \"isActive\": true,\n    \"selfObtainable\": false,\n    \"fullReadAccess\": false\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/resource-roles",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "resource-roles"
                            ]
                        },
                        "description": "Create a new resource role.\nOnly admins can call this endpoint.\n"
                    },
                    "response": [
                        {
                            "name": "OK - the request was successful (Observer)",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    },
                                    {
                                        "key": "Content-Type",
                                        "name": "Content-Type",
                                        "value": "application/json",
                                        "type": "text"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\r\n    \"name\": \"Observer\",\r\n    \"fullReadAccess\": false,\r\n    \"fullWriteAccess\": false,\r\n    \"isActive\": false,\r\n    \"selfObtainable\": false\r\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/resource-roles",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resource-roles"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n \"name\": \"Observer\",\n \"fullWriteAccess\": true,\n \"isActive\": false,\n \"selfObtainable\": false,\n \"id\": \"do amet laboris\",\n \"fullReadAccess\": false\n}"
                        },
                        {
                            "name": "The unauthorized error entity.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resource-roles",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resource-roles"
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The permission error entity.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resource-roles",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resource-roles"
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The server error entity.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resource-roles",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resource-roles"
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The bad request error entity.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resource-roles",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resource-roles"
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The conflict error entity.",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resource-roles",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resource-roles"
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        }
                    ]
                },
                {
                    "name": "/resource-roles/:resourceRoleId",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Update ressoure roles endpoint', function() {\r",
                                    "    pm.sendRequest(\"\", function(err, response) {\r",
                                    "        pm.expect(response.json()).to.have.property('id');\r",
                                    "        pm.expect(response.json().name).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "        pm.expect(response.json().).to.eql();\r",
                                    "    });\r",
                                    "})"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "Authorization",
                                    "type": "string"
                                },
                                {
                                    "key": "value",
                                    "value": true,
                                    "type": "boolean"
                                },
                                {
                                    "key": "in",
                                    "value": "header",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"enim eu cillum sunt\",\n    \"fullWriteAccess\": true,\n    \"isActive\": true,\n    \"selfObtainable\": false,\n    \"fullReadAccess\": false\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/resource-roles/:resourceRoleId",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "resource-roles",
                                ":resourceRoleId"
                            ],
                            "variable": [
                                {
                                    "key": "resourceRoleId",
                                    "value": "dolore commodo",
                                    "type": "string",
                                    "description": "(Required) "
                                }
                            ]
                        },
                        "description": "Update an existing resource role.\nOnly admins can call this endpoint.\n"
                    },
                    "response": [
                        {
                            "name": "The conflict error entity.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resource-roles/:resourceRoleId",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resource-roles",
                                        ":resourceRoleId"
                                    ],
                                    "variable": [
                                        {
                                            "key": "resourceRoleId"
                                        }
                                    ]
                                }
                            },
                            "status": "Conflict",
                            "code": 409,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The bad request error entity.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resource-roles/:resourceRoleId",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resource-roles",
                                        ":resourceRoleId"
                                    ],
                                    "variable": [
                                        {
                                            "key": "resourceRoleId"
                                        }
                                    ]
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The unauthorized error entity.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resource-roles/:resourceRoleId",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resource-roles",
                                        ":resourceRoleId"
                                    ],
                                    "variable": [
                                        {
                                            "key": "resourceRoleId"
                                        }
                                    ]
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The permission error entity.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resource-roles/:resourceRoleId",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resource-roles",
                                        ":resourceRoleId"
                                    ],
                                    "variable": [
                                        {
                                            "key": "resourceRoleId"
                                        }
                                    ]
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "OK - the request was successful",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resource-roles/:resourceRoleId",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resource-roles",
                                        ":resourceRoleId"
                                    ],
                                    "variable": [
                                        {
                                            "key": "resourceRoleId"
                                        }
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "cookie": [],
                            "body": "{\n \"name\": \"Duis labore Ut reprehenderit deserunt\",\n \"fullWriteAccess\": true,\n \"isActive\": true,\n \"selfObtainable\": false,\n \"id\": \"do amet laboris\",\n \"fullReadAccess\": true\n}"
                        },
                        {
                            "name": "The server error entity.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resource-roles/:resourceRoleId",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resource-roles",
                                        ":resourceRoleId"
                                    ],
                                    "variable": [
                                        {
                                            "key": "resourceRoleId"
                                        }
                                    ]
                                }
                            },
                            "status": "Internal Server Error",
                            "code": 500,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        },
                        {
                            "name": "The not found error entity.",
                            "originalRequest": {
                                "method": "PUT",
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "Authorization",
                                        "value": "<API Key>"
                                    }
                                ],
                                "url": {
                                    "raw": "{{baseUrl}}/resource-roles/:resourceRoleId",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "resource-roles",
                                        ":resourceRoleId"
                                    ],
                                    "variable": [
                                        {
                                            "key": "resourceRoleId"
                                        }
                                    ]
                                }
                            },
                            "status": "Not Found",
                            "code": 404,
                            "_postman_previewlanguage": "text",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "cookie": [],
                            "body": ""
                        }
                    ]
                }
            ]
        },
        {
            "name": "/health",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('Health check success', function() {\r",
                            "    const res = pm.response.json();\r",
                            "    \r",
                            "    pm.expect(pm.response).to.have.status(200);\r",
                            "    pm.expect(res).to.have.property('checksRun');\r",
                            "    pm.expect(res.checksRun).to.eql(1);\r",
                            "})\r",
                            ""
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "bearer"
                },
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "https://dae55c6c-b9b4-44bd-9f9e-d7b94be0709b.mock.pstmn.io/health",
                    "protocol": "https",
                    "host": [
                        "dae55c6c-b9b4-44bd-9f9e-d7b94be0709b",
                        "mock",
                        "pstmn",
                        "io"
                    ],
                    "path": [
                        "health"
                    ]
                },
                "description": "Health check endpoint"
            },
            "response": [
                {
                    "name": "The server is unavailable",
                    "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/health",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "health"
                            ]
                        }
                    },
                    "status": "Service Unavailable",
                    "code": 503,
                    "_postman_previewlanguage": "text",
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "text/plain"
                        }
                    ],
                    "cookie": [],
                    "body": ""
                },
                {
                    "name": "success",
                    "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/health",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "health"
                            ]
                        }
                    },
                    "status": "OK",
                    "code": 200,
                    "_postman_previewlanguage": "json",
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "cookie": [],
                    "body": "{\n \"checksRun\": 1\n}"
                }
            ]
        }
    ],
    "auth": {
        "type": "bearer"
    },
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        },
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        }
    ],
    "variable": [
        {
            "key": "baseUrl",
            "value": "http://api.topcoder.com/v5"
        },
        {
            "key": "DEFAULT_PAGE_SIZE",
            "value": "50"
        },
        {
            "key": "AUTH_SECRET",
            "value": "mysecret"
        },
        {
            "key": "ALID_ISSUERS",
            "value": "[\"https://api.topcoder-dev.com\", \"https://api.topcoder.com\", \"https://topcoder-dev.auth0.com/\"]"
        },
        {
            "key": "SUBMITTER_RESOURCE_ROLE_ID",
            "value": "732339e7-8e30-49d7-9198-cccf9451e221"
        },
        {
            "key": "AUTH0_URL",
            "value": "https://topcoder-dev.auth0.com/oauth/token"
        },
        {
            "key": "AUTH0_AUDIENCE",
            "value": "https://m2m.topcoder-dev.com/"
        },
        {
            "key": "AUTH0_CLIENT_ID",
            "value": "jGIf2pd3f44B1jqvOai30BIKTZanYBfU"
        },
        {
            "key": "AUTH0_CLIENT_SECRET",
            "value": "ldzqVaVEbqhwjM5KtZ79sG8djZpAVK8Z7qieVcC3vRjI4NirgcinKSBpPwk6mYYP"
        },
        {
            "key": "TERMS_API_URL",
            "value": "https://api.topcoder-dev.com/v5/terms"
        },
        {
            "key": "MEMBER_API_URL",
            "value": "https://api.topcoder-dev.com/v5/members"
        },
        {
            "key": "USER_API_URL",
            "value": "https://api.topcoder-dev.com/v3/users"
        },
        {
            "key": "CHALLENGE_API_URL",
            "value": "http://localhost:4000/v5/challenges"
        },
        {
            "key": "CHALLENGE_PHASES_API_URL",
            "value": "https://api.topcoder-dev.com/v5/challenge-phases"
        },
        {
            "key": "AWS_REGION",
            "value": "us-east-1"
        },
        {
            "key": "IS_LOCAL_DB",
            "value": "true"
        },
        {
            "key": "AWS_READ_UNITS",
            "value": "4"
        },
        {
            "key": "AWS_WRITE_UNITS",
            "value": "2"
        },
        {
            "key": "TIMEOUT",
            "value": "10000"
        },
        {
            "key": "ES_HOST",
            "value": "localhost:9200"
        },
        {
            "key": "ES_API_VERSION",
            "value": "6.8"
        },
        {
            "key": "ES_INDEX",
            "value": "resources"
        },
        {
            "key": "ES_TYPE",
            "value": "_doc"
        },
        {
            "key": "ES_REFRESH",
            "value": "true"
        },
        {
            "key": "SCOPE_READ",
            "value": "read:resources"
        },
        {
            "key": "SCOPE_CREATE",
            "value": "create:resources"
        },
        {
            "key": "SCOPE_DELETE",
            "value": "delete:resources"
        },
        {
            "key": "SCOPE_UPDATE",
            "value": "update:resources"
        },
        {
            "key": "SCOPE_ALL",
            "value": "all:resources"
        },
        {
            "key": "KAFKA_ERROR_TOPIC",
            "value": "common.error.reporting"
        },
        {
            "key": "KAFKA_MESSAGE_ORIGINATOR",
            "value": "resources-api"
        },
        {
            "key": "RESOURCE_CREATE_TOPIC",
            "value": "challenge.action.resource.create"
        },
        {
            "key": "RESOURCE_DELETE_TOPIC",
            "value": "challenge.action.resource.delete"
        },
        {
            "key": "RESOURCE_ROLE_CREATE_TOPIC",
            "value": "challenge.action.resource.role.create"
        },
        {
            "key": "RESOURCE_ROLE_UPDATE_TOPIC",
            "value": "challenge.action.resource.role.update"
        },
        {
            "key": "BUSAPI_URL",
            "value": "http://localhost:4000/v5"
        },
        {
            "key": "AWS_ACCESS_KEY_ID",
            "value": "FAKE_ACCESS_KEY"
        },
        {
            "key": "AWS_SECRET_ACCESS_KEY",
            "value": "FAKE_SECRET_ACCESS_KEY"
        },
        {
            "key": "DYNAMODB_URL",
            "value": "http://localhost:7777"
        },
        {
            "key": "WAIT_TIME",
            "value": "1500"
        },
        {
            "key": "MOCK_CHALLENGE_API_PORT",
            "value": "4000"
        }
    ]
}